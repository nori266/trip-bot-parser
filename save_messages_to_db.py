import os
import re

from dotenv import load_dotenv
# events and sync should be imported to avoid the error:
# TypeError: 'coroutine' object is not iterable
from telethon import TelegramClient, events, sync
from tqdm.asyncio import tqdm

from database import createDB, getDBconn, insert_message

"""
Message examples:
#–≤–æ–¥–∏—Ç–µ–ª—å #–≤—Ñ–∏–Ω–ª—è–Ω–¥–∏—é

‚òéÔ∏è –°–≤—è–∑–∞—Ç—å—Å—è (–¢–µ–ª–µ–≥—Ä–∞–º): @nickname1, Name1 #id400000000
üí∂ –¶–µ–Ω–∞: 100
üóì –î–∞—Ç–∞: 04.06.2023
üí∫ –ú–µ—Å—Ç: 3
–û·¥õ  ç·•±·¥õœÅ·ßê êåøœÅ·ßê·•¥ ô·•±—â·•±–Ω·•ô—è –¥·¥è  ô·¥Ä…Ø·¥á·¥¶·¥è ·¥Ä–¥·¥©·¥á·¥Ñ·¥Ä  ô –§–∏–Ω·¥ß—è–Ω–¥–∏–∏. –í—ã·¥á…ú–¥  ô 14.00 BMW X5. –ß–∏·¥õ·¥Ä–π·¥õ·¥á ·¥è·¥õ…ú—ã ô—ã.

üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤ –æ –ø–æ–ø—É—Ç—á–∏–∫–µ Name1

 –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ—é –∑–∞—è–≤–∫—É —á–µ—Ä–µ–∑ –±–æ—Ç: @botname
 
#–ø–∞—Å—Å–∞–∂–∏—Ä #–≤—Ñ–∏–Ω–ª—è–Ω–¥–∏—é

‚òéÔ∏è –°–≤—è–∑–∞—Ç—å—Å—è (–¢–µ–ª–µ–≥—Ä–∞–º): @nickname2, Name2 #id100000000
üí∂ –¶–µ–Ω–∞: 35
üóì –î–∞—Ç–∞: 30.05.2023
üí∫ –ú–µ—Å—Ç: 1
–ù—É–∂–Ω–∞ –º–∞—à–∏–Ω–∞ –∏–∑ —Å–ø–± –∏–ª–∏ –≤—ã–±–æ—Ä–≥–∞ –ø–æ—Å–ª–µ –æ–±–µ–¥–∞ –¥–æ Virolahti –±—é–¥–∂–µ—Ç

üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤ –æ –ø–æ–ø—É—Ç—á–∏–∫–µ Name2

 –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ—é –∑–∞—è–≤–∫—É —á–µ—Ä–µ–∑ –±–æ—Ç: @botname
"""


load_dotenv()
api_id = int(os.getenv("API_ID"))
api_hash = os.getenv("API_HASH")

LAST_MESSAGES_NUMBER = 10000
BOT_NAME = "rus_fin_kyyti"  # TODO to env
# TODO desired date pattern as a command line argument
TRIP_DATE_PATTERN = re.compile(r"–î–∞—Ç–∞: (\d\d.\d\d.\d\d\d\d)")  # group 1 should be a date


def get_last_n_mes(n=LAST_MESSAGES_NUMBER):
    client = TelegramClient('parse_session', api_id, api_hash)
    client.start()
    return client.get_messages('rus_fin_kyyti', limit=n)


def extract_trip_date(message):
    search = TRIP_DATE_PATTERN.search(message)
    if search:
        date = search.group(1)
        return date
    else:
        return None


def extract_hashtags(message):
    to_russia = "#–≤—Ä–æ—Å—Å–∏—é" in message
    to_finland = "#–≤—Ñ–∏–Ω–ª—è–Ω–¥–∏—é" in message
    is_driver = "#–≤–æ–¥–∏—Ç–µ–ª—å" in message
    return to_russia, to_finland, is_driver


createDB("./tg_drivers_bot.db")

dbConnection = getDBconn("./tg_drivers_bot.db")
dbCursor = dbConnection.cursor()


for mes in tqdm(get_last_n_mes()):
    if not mes.message:
        continue
    trip_date = extract_trip_date(mes.message)
    torussia, tofinland, isdriver = extract_hashtags(mes.message)
    if not (torussia or tofinland):
        continue
    insert_message(dbCursor, mes, trip_date, torussia, tofinland, isdriver)


dbConnection.commit()
dbConnection.close()
